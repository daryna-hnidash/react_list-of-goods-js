{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","sortByABC","sortByLength","App","useState","sortMethod","setSortMethod","isReversed","setOrder","visibleGoods","goodsArr","sortBy","preparedGoods","sort","good1","good2","localeCompare","length","reverse","sorting","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAY,MACZC,EAAe,SA2BRC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+BF,oBAAS,GAAxC,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BQ,SAACC,EAAUC,EAAQJ,GACjC,IAAMK,EAAa,YAAOF,GAqB1B,OAnBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXV,GACFK,EAAcM,UAGTN,EAOcO,CAAQnB,EAAiBK,EAAYE,GAE1D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYjB,IAAeJ,IAE7BsB,QAAS,kBAAMjB,EAAcL,IAL/B,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYjB,IAAeH,IAE7BqB,QAAS,kBAAMjB,EAAcJ,IAL/B,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAff,IAEdgB,QAAS,kBAAMf,GAAUD,IAL3B,sBAUEA,GAAcF,IACd,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAc,IACdE,GAAS,IALb,sBAcJ,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5bc0a28d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\nimport { useState } from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortByABC = 'abc';\nconst sortByLength = 'length';\n\nconst sorting = (goodsArr, sortBy, isReversed) => {\n  const preparedGoods = [...goodsArr];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case sortByABC:\n          return good1.localeCompare(good2);\n\n        case sortByLength:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortMethod, setSortMethod] = useState('');\n  const [isReversed, setOrder] = useState(false);\n\n  const visibleGoods = sorting(goodsFromServer, sortMethod, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortMethod !== sortByABC,\n          })}\n          onClick={() => setSortMethod(sortByABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortMethod !== sortByLength,\n          })}\n          onClick={() => setSortMethod(sortByLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': isReversed === false,\n          })}\n          onClick={() => setOrder(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortMethod) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortMethod('');\n              setOrder(false);\n            }}\n          >\n            Reset\n          </button>\n        )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}